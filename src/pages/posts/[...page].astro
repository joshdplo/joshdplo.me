---
import { SITE } from "@constants";
import { getPageMenuLinksFromPath } from "@util";
import { getCollection } from "astro:content";
import CollectionLayout from "@layouts/CollectionLayout.astro";
import PostCard from "@components/PostCard.astro";
import Pagination from "@components/Pagination.astro";

const pageMenuLinks = getPageMenuLinksFromPath("/posts");

export async function getStaticPaths({ paginate }) {
  const posts = await getCollection("posts");
  const sortedPosts = posts.sort(
    (a, b) =>
      new Date(b.data.updated || b.data.date) -
      new Date(a.data.updated || a.data.date),
  );
  return paginate(sortedPosts, { pageSize: SITE.POSTS_PER_PAGE });
}

const { page } = Astro.props;
const { total, currentPage, lastPage } = page;
---

<CollectionLayout
  pageTitle={`ðŸ“‹ All Posts${currentPage > 1 ? " (" + currentPage + "/" + lastPage + ")" : ""}`}
  heroText="Posts"
  {pageMenuLinks}
  {currentPage}
>
  <section class="contain">
    {currentPage === 1 && <h1>Browse All Posts</h1>}
    <div class="list">
      {page.data.map((post) => <PostCard data={post} />)}
    </div>

    <Pagination
      {total}
      {currentPage}
      {lastPage}
      label="posts"
      nextUrl={page.url.next}
      prevUrl={page.url.prev}
    />
  </section>
</CollectionLayout>

<style lang="scss">
  @use "@css/util";

  .list {
    position: relative;
    display: grid;
    grid-template-columns: 1fr;
    align-items: center;
    justify-content: center;
    gap: 1.7rem;
    margin: 2rem 0 2.5rem;

    @include util.mq(md) {
      grid-template-columns: 1fr 1fr;
      gap: 1.2rem;
    }
  }
</style>

---
import { SITE } from "@constants";
import { getPageMenuLinksFromPath } from "@util";
import { getCollection } from "astro:content";
import CollectionLayout from "@layouts/CollectionLayout.astro";
import KeepCard from "@components/KeepCard.astro";
import Pagination from "@components/Pagination.astro";

export async function getStaticPaths({ paginate }) {
  const keeps = await getCollection("keeps");
  const tags = [...new Set(keeps.map((k) => k.data.tags).flat())];

  return tags.flatMap((t) => {
    const tagKeeps = keeps.filter((k) => k.data.tags.includes(t));

    return paginate(tagKeeps, {
      params: { tag: t },
      pageSize: SITE.KEEPS_PER_PAGE,
    });
  });
}

const { tag } = Astro.params;
const { page } = Astro.props;
const { total, currentPage, lastPage } = page;
const pageMenuLinks = getPageMenuLinksFromPath("/keeps");
---

<CollectionLayout
  pageTitle={`keeps ${tag} notes ðŸ“‹${currentPage > 1 ? " (" + currentPage + "/" + lastPage + ")" : ""}`}
  heroText="Keeps"
  heroSubtext={`#${tag}`}
  heroDescenders={true}
  {pageMenuLinks}
  {currentPage}
>
  <section class="contain">
    {page.data.map((keep) => <KeepCard data={keep} />)}

    <Pagination
      {total}
      {currentPage}
      {lastPage}
      label="notes"
      nextUrl={page.url.next}
      prevUrl={page.url.prev}
    />
  </section>
</CollectionLayout>

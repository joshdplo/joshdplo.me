---
import { META } from "@constants";
import { Image } from "astro:assets";
const { data } = Astro.props;
const movieData = data.data;
const movieId = data.id;

const imagesGlob = import.meta.glob("@slurpi/public/images/tmdb/*.jpg");
const img =
  imagesGlob[
    Object.keys(imagesGlob).filter(
      (k) =>
        k.split("/")[k.split("/").length - 1].replace(".jpg", "") === movieId,
    )[0]
  ]();

// Helpers
const isMovie = movieData.release_date;
const title = movieData.title || movieData.name;
const released = (movieData.release_date || movieData.first_air_date).split(
  "-",
)[0];
const favorite = movieData.rating !== null;
const mega = movieData.mega;
const genreIds = JSON.parse(movieData.genre_ids);
const genresMap = META[isMovie ? "tmdbMovieGenres" : "tmdbTvGenres"];
---

<div class="card" class:list={[{ mega }, { favorite }]}>
  <Image
    src={img}
    alt={`poster for ${title}`}
    width="200"
    height="300"
    loading="lazy"
  />
  <div class="info">
    <span class="title"
      >{title}<br />{` (${released}, ${movieData.original_language})`}</span
    >
    <div class="bottom">
      <span class="genres">
        {genreIds.map((id) => <span>{genresMap[`${id}`]}</span>)}
      </span>
      <a
        href={`https://www.themoviedb.org/${isMovie ? "movie" : "tv"}/${movieId}`}
        >Go to TMDB</a
      >
    </div>
  </div>
</div>

<style lang="scss">
  @use "@css/util";

  .card {
    position: relative;
    display: flex;
    flex-direction: column;
    width: 130px;
    height: 195px;
    overflow: hidden;

    picture,
    img {
      height: 100%;
    }

    &:hover,
    &:focus-within {
      transform: scale(1.1);
      box-shadow: 0px 10px 15px -3px rgba(0, 0, 0, 1);
      z-index: 2;

      .info {
        z-index: 1;
      }

      img {
        filter: blur(4px);
      }
    }

    @include util.mq(md) {
      width: 180px;
      height: 270px;

      &:hover,
      &:focus-within {
        transform: scale(1.15);
      }
    }
  }

  .info {
    position: absolute;
    display: flex;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    flex-direction: column;
    padding: 0.5rem 1rem 0.5rem 0.5rem;
    font-size: 1rem;
    font-weight: bold;
    line-height: 1;
    z-index: -1;
    background-color: var(--content-transparent);
    overflow-y: auto;

    .bottom {
      position: relative;
      display: flex;
      flex-direction: column;
      gap: 0.5rem;
      margin-top: auto;
    }

    a {
      width: 100%;
      padding: 0.33rem 0 0.25rem;
      font-size: 0.8rem;
      text-align: center;
      border-radius: 1em;
      color: var(--c-black);
      background-color: var(--c-secondary);
      border: 0.1rem solid var(--font-color);
      text-decoration: none;
    }
  }

  .title {
    margin-bottom: 1em;
    text-shadow: 1px 1px 0 var(--font-color-opposite);
  }

  .genres {
    position: relative;
    display: flex;
    flex-wrap: wrap;
    font-size: 0.6rem;
    gap: 0.2rem;

    span {
      padding: 0.15rem 0.25rem 0.1rem;
      background-color: var(--font-color-opposite);
      border: 1px solid var(--font-color);
      border-radius: 1rem;
      font-weight: normal;
    }
  }

  .favorite::before,
  .favorite .info::before,
  .mega::before,
  .mega .info::before {
    content: "\2606";
    position: absolute;
    top: 0.1rem;
    right: 0.2rem;
    font-size: 1.5rem;
    line-height: 1;
    color: var(--c-theme-gold);
    text-shadow: 0.03em 0.05em 0 var(--font-color);
  }
  .mega::before,
  .mega .info::before {
    content: "\2605";
  }
</style>

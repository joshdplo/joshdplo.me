---
import { META } from "@constants";
import { Image } from "astro:assets";
const { data, mini } = Astro.props;
const movieData = data.data;
const movieId = data.id;

const imagesGlob = import.meta.glob("@slurpi/public/images/tmdb/*.jpg");
const img =
  imagesGlob[
    Object.keys(imagesGlob).filter(
      (k) =>
        k.split("/")[k.split("/").length - 1].replace(".jpg", "") === movieId,
    )[0]
  ]();

// Helpers
const isMovie = movieData.release_date;
const title = movieData.title || movieData.name;
const released = (movieData.release_date || movieData.first_air_date).split(
  "-",
)[0];
const favorite = movieData.rating !== null;
const mega = movieData.mega;
const genreIds = JSON.parse(movieData.genre_ids);
const genresMap = META[isMovie ? "tmdbMovieGenres" : "tmdbTvGenres"];
---

{
  !mini && (
    <div
      class="card"
      class:list={[{ mega }, { favorite }]}
      data-movie-id={isMovie ? movieId : undefined}
      data-show-id={!isMovie ? movieId : undefined}
    >
      <Image
        src={img}
        alt={`poster for ${title}`}
        width="200"
        height="300"
        loading="lazy"
      />
      <div class="info">
        <div class="title">
          <span>{title}</span>
          <i>{`${released}, ${movieData.original_language}`}</i>
        </div>
        <div class="overview">{movieData.overview}</div>
        <div class="bottom">
          <span class="genres">
            {genreIds.map((id) => (
              <span>{genresMap[`${id}`]}</span>
            ))}
          </span>
          <a
            href={`https://www.themoviedb.org/${isMovie ? "movie" : "tv"}/${movieId}`}
          >
            TMDB Page
          </a>
        </div>
      </div>
    </div>
  )
}

{
  mini && (
    <div class="card-mini">
      <Image
        src={img}
        alt={`poster for ${title}`}
        width="200"
        height="300"
        loading="lazy"
      />
    </div>
  )
}

<style lang="scss">
  @use "@css/util";

  .card {
    --img-width: 140px;
    --img-height: 210px;

    position: relative;
    display: grid;
    grid-template-rows: var(--img-height) 1fr;
    gap: 1rem;
    padding: 0.55rem;

    @include util.mq(sm) {
      --img-width: 160px;
      --img-height: 240px;

      grid-template-rows: 1fr;
      grid-template-columns: var(--img-width) 1fr;
    }

    img {
      width: var(--img-width);
      height: var(--img-height);
      box-shadow: 0px 0px 11px 0px rgba(0, 0, 0, 0.2);
      z-index: 2;
      margin: auto;
    }

    .info {
      position: relative;
      display: flex;
      flex-direction: column;
      gap: 0.5rem;
      border-left: 0;
    }

    .title {
      display: flex;
      flex-direction: column;
      gap: 0.2rem;
      line-height: 1;
      padding-right: 0.5rem;
      text-align: center;

      span {
        font-size: 1.4rem;
        line-height: 1;
        font-weight: bold;
      }

      i {
        font-size: 1rem;
        font-style: normal;
      }

      @include util.mq(sm) {
        text-align: left;
      }
    }

    .overview {
      position: relative;
      font-size: 0.9rem;
      padding: 0.3rem 0;
      line-height: 1.3;
      overflow-y: auto;
    }

    .bottom {
      margin-top: auto;
      padding: 0.7rem 0 0.25rem;
      border-bottom: 1px dotted var(--content-subtle);
      border-left: 0;
      border-right: 0;
    }

    .genres {
      position: relative;
      display: flex;
      flex-wrap: wrap;
      line-height: 1;
      font-size: 0.8rem;

      span::after {
        content: ",";
        margin-right: 0.25rem;
      }

      span:last-child:after {
        content: none;
      }
    }

    a {
      display: inline-flex;
      justify-content: center;
      font-size: 1rem;
    }

    .favorite::before,
    .mega::before {
      content: "\2606";
      position: absolute;
      top: 0.3rem;
      right: 0.3rem;
      font-size: 1.5rem;
      line-height: 1;
      color: var(--c-theme-gold);
      text-shadow: 0.03em 0.05em 0 var(--font-color);
    }
    .mega::before {
      content: "\2605";
    }
  }

  .card-mini {
    --img-width: 150px;
    --img-height: 225px;
    position: relative;
    display: block;

    img {
      width: var(--img-width);
      height: var(--img-height);
    }
  }
</style>

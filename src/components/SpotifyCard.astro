---
import { Image } from "astro:assets";
const { data, mini } = Astro.props;

const itemData = data.data;
const itemId = data.id;
const isSong = itemData.duration_ms;
const imagesGlob = import.meta.glob("@slurpi/public/images/spotify/*.jpg");
const img =
  imagesGlob[
    Object.keys(imagesGlob).filter(
      (k) =>
        k.split("/")[k.split("/").length - 1].replace(".jpg", "") === itemId,
    )[0]
  ]();

const durationFormatted = `${Math.trunc(itemData.duration_ms / 1000 / 60)}min${(itemData.duration_ms / 1000) % 60 > 0 ? " " + Math.floor((itemData.duration_ms / 1000) % 60) + "sec" : ""}`;
---

{
  !mini && (
    <a
      class="card"
      href={itemData.url}
      data-song-id={isSong ? itemId : undefined}
      data-band-id={!isSong ? itemId : undefined}
    >
      <Image
        src={img}
        alt={`art for ${itemData.name}`}
        width="300"
        height="300"
      />
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill-rule="evenodd"
        clip-rule="evenodd"
        viewBox="0 0 24 24"
      >
        <path d="M12 0C5.373 0 0 5.373 0 12s5.373 12 12 12 12-5.373 12-12S18.627 0 12 0zm0 2c5.514 0 10 4.486 10 10s-4.486 10-10 10S2 17.514 2 12 6.486 2 12 2zm0 3a7 7 0 1 0 0 14 7 7 0 0 0 0-14zm3.21 10.096a.436.436 0 0 1-.6.146c-1.643-1.005-3.712-1.232-6.149-.675a.437.437 0 0 1-.194-.851c2.666-.609 4.954-.347 6.799.78.205.126.27.395.144.6zm.857-1.906a.546.546 0 0 1-.751.18c-1.881-1.156-4.75-1.491-6.975-.816a.545.545 0 1 1-.317-1.044c2.542-.771 5.703-.398 7.863.93a.545.545 0 0 1 .18.75zm.074-1.984c-2.257-1.34-5.979-1.464-8.133-.81a.654.654 0 1 1-.38-1.253c2.473-.75 6.583-.605 9.181.937a.655.655 0 0 1-.668 1.126z" />
      </svg>
      <div class="over">
        <div class="title">{itemData.name}</div>
        {isSong && <div class="duration">{durationFormatted}</div>}
        {isSong && (
          <div class="artists" data-details>
            by{" "}
            {JSON.parse(itemData.artists)
              .map((a) => a.name)
              .join(", ")}
          </div>
        )}
        {!isSong && (
          <div class="artists" data-details>
            {JSON.parse(itemData.genres).join(", ")}
          </div>
        )}
      </div>
    </a>
  )
}

{
  mini && (
    <a
      class="card-mini"
      data-song-id={isSong ? itemId : undefined}
      data-band-id={!isSong ? itemId : undefined}
      data-link
      href={itemData.url}
      title={itemData.name}
    >
      <Image
        src={img}
        alt={`art for ${itemData.name}`}
        width="300"
        height="300"
      />
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill-rule="evenodd"
        clip-rule="evenodd"
        viewBox="0 0 24 24"
      >
        <path d="M12 0C5.373 0 0 5.373 0 12s5.373 12 12 12 12-5.373 12-12S18.627 0 12 0zm0 2c5.514 0 10 4.486 10 10s-4.486 10-10 10S2 17.514 2 12 6.486 2 12 2zm0 3a7 7 0 1 0 0 14 7 7 0 0 0 0-14zm3.21 10.096a.436.436 0 0 1-.6.146c-1.643-1.005-3.712-1.232-6.149-.675a.437.437 0 0 1-.194-.851c2.666-.609 4.954-.347 6.799.78.205.126.27.395.144.6zm.857-1.906a.546.546 0 0 1-.751.18c-1.881-1.156-4.75-1.491-6.975-.816a.545.545 0 1 1-.317-1.044c2.542-.771 5.703-.398 7.863.93a.545.545 0 0 1 .18.75zm.074-1.984c-2.257-1.34-5.979-1.464-8.133-.81a.654.654 0 1 1-.38-1.253c2.473-.75 6.583-.605 9.181.937a.655.655 0 0 1-.668 1.126z" />
      </svg>
      <div class="over">
        <div class="title">{itemData.name}</div>
        {isSong && (
          <div class="artists">
            {JSON.parse(itemData.artists).map((a) => (
              <span>{a.name}</span>
            ))}
          </div>
        )}
      </div>
    </a>
  )
}

<style lang="scss">
  @use "@css/util";

  .card {
    position: relative;
    display: block;
    border-radius: 0.7rem;
    margin: auto;

    &::after {
      display: none;
    }

    img {
      position: relative;
      display: flex;
      border-radius: 0.7rem;
    }

    svg {
      position: absolute;
      display: block;
      bottom: 0.25rem;
      right: 0.25rem;
      height: 24px;
      width: 24px;
      border-radius: 12px;
      background-color: var(--c-transparent-dark);
      z-index: 1;

      path {
        fill: #1ed760;
      }

      .card.mini & {
        width: 16px;
        height: 16px;
        border-radius: 8px;
        bottom: auto;
        top: 0.1rem;
        right: 0.1rem;
      }
    }

    .over {
      position: absolute;
      display: flex;
      flex-direction: column;
      bottom: 0;
      left: 0;
      width: 100%;
      gap: 0.2rem;
      padding: 0.5rem 2rem 0.5rem 0.4rem;
      background-color: var(--content-transparent);
      backdrop-filter: blur(6px);
      border-bottom-left-radius: 0.7rem;
      border-bottom-right-radius: 0.7rem;
    }

    .title {
      font-size: 1rem;
      font-weight: bold;
      line-height: 1.1;
    }

    .duration {
      font-size: 0.8rem;
      line-height: 1.1;
    }

    .artists,
    .genres {
      position: relative;
      display: flex;
      flex-wrap: wrap;
      gap: 0.2rem;
      font-size: 0.8rem;
      line-height: 1.1;

      span:last-child::after {
        content: none;
      }
    }
  }

  .card-mini {
    position: relative;
    display: block;
    font-size: 0.7rem;
    line-height: 1;
    border-left: 0;
    box-shadow: 0px 0px 18px 0px transparent;
    transition: 0.1s ease-out;

    &::after {
      display: none;
    }

    &:hover,
    &:focus-visible {
      transform: scale(1.1);
      z-index: 2;
      box-shadow: 0px 0px 18px 0px rgba(0, 0, 0, 0.45);
    }

    img {
      width: 140px;
      height: 140px;
    }

    svg {
      position: absolute;
      width: 16px;
      height: 16px;
      top: 3px;
      right: 3px;
      border-radius: 8px;
      background-color: var(--c-transparent-dark);

      path {
        fill: #1ed760;
      }
    }

    .over {
      position: absolute;
      display: flex;
      flex-direction: column;
      gap: 0.1rem;
      bottom: 0;
      left: 0;
      width: 100%;
      padding: 0.1rem 0.3rem;
      font-size: 0.7rem;
      background: var(--content-transparent);
    }

    .title {
      font-weight: bold;
    }
  }
</style>

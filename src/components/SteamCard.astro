---
import { Image } from "astro:assets";
const { data } = Astro.props;
const itemData = data.data;
const appid = data.data.appid;

const imagesGlob = import.meta.glob("@slurpi/public/images/steam/*.jpg");
const img =
  imagesGlob[
    Object.keys(imagesGlob).filter(
      (k) =>
        k.split("/")[k.split("/").length - 1].replace(".jpg", "") ===
        "" + appid,
    )[0]
  ]();
const platforms = JSON.parse(itemData.platforms);
const developers = JSON.parse(itemData.developers);
const genres = JSON.parse(itemData.genres);
const categories = JSON.parse(itemData.categories);
---

<div class="card">
  <div>
    <Image
      src={img}
      alt={`art for ${itemData.name}`}
      width="231"
      height="87"
      loading="lazy"
    />
  </div>
  <div class="info">
    <div class="title">{itemData.name}</div>
    <div class="os">
      {
        platforms.windows && (
          <img src="/images/windows.png" alt="windows logo" loading="lazy" />
        )
      }
      {
        platforms.mac && (
          <img src="/images/mac.png" alt="apple logo" loading="lazy" />
        )
      }
      {
        platforms.linux && (
          <img src="/images/linux.png" alt="linux logo" loading="lazy" />
        )
      }
    </div>
    <div class="released">
      Released {JSON.parse(itemData.release_date).date}
    </div>
    <a href={`https://store.steampowered.com/app/${appid}`} class="link"
      >Steam Page</a
    >
    <div class="description">
      {
        itemData.short_description
          .replaceAll("&amp;", "&")
          .replaceAll("&quot;", '"')
      }
    </div>
    <div class="developers">
      {developers && developers.map((d) => <span>{d}</span>)}
    </div>
    <div class="genres">
      {genres && genres.map((g) => <span>{g.description}</span>)}
      {
        categories &&
          categories
            .filter(
              (c) =>
                c.description.toLowerCase().includes("player") ||
                c.description.toLowerCase().includes("co-op"),
            )
            .map((c) => <span>{c.description}</span>)
      }
    </div>
  </div>
</div>

<style lang="scss">
  .card {
    --img-width: 231px;

    position: relative;
    display: grid;
    grid-template-columns: var(--img-width) 1fr;
    gap: 0.6rem;
    justify-content: center;
    text-decoration: none;

    &::after {
      display: none;
    }
  }

  img {
    margin: 0 0.2rem 0.2rem 0;
  }

  .info {
    position: relative;
    display: flex;
    flex-direction: column;
    font-size: 1rem;
    line-height: 1.2;
  }

  .title {
    font-size: 1rem;
    font-weight: bold;
    line-height: 1.1;
  }

  .os {
    background-color: var(--c-theme-light);
    margin-right: auto;
    padding-left: 3px;
    img {
      width: 12px;
      height: 12px;
    }
  }

  .developers {
    position: relative;
    display: flex;
    flex-wrap: wrap;
    gap: 0.3em;
    margin-bottom: 0.2rem;
    font-size: 0.9rem;

    span::after {
      content: ", ";
    }

    span:last-child::after {
      content: none;
    }
  }

  .genres {
    display: flex;
    flex-wrap: wrap;
    gap: 0.2rem;
    font-size: 0.7rem;
    opacity: 0.5;

    span {
      padding: 0.1em 0.3em;
      border: 1px solid var(--font-color);
      border-radius: 1em;
    }
  }

  .link,
  .description {
    margin-bottom: 0.7rem;
  }
</style>
